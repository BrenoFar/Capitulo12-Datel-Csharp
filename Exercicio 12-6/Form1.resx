<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8Jnc15lmAAAAAElFTkSuQmCC
</value>
  </data>
</root>